# -*- coding: utf-8 -*-
"""DTU - Intro ML - Project 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NDhgvJv55Qm4GXwKe6X8_321biB_Cx7a
"""

# Import dependencies
import pandas as pd
from scipy.linalg import svd
import numpy as np
import matplotlib.pyplot as plt
from pandas.plotting import scatter_matrix
from mpl_toolkits.mplot3d import Axes3D
from scipy.linalg import eig

# Download data
# !wget https://web.stanford.edu/~hastie/ElemStatLearn/datasets/SAheart.data

df = pd.read_csv("SouthAfrica.csv", sep=",")
df

df2 = df.copy()
df2["famhist"] = 1 * (df2["famhist"] == "Present")
cols = ["sbp", "tobacco", "ldl", "adiposity", "typea", "obesity", "alcohol", "age"]
df2[cols] = (df2[cols] - df2[cols].mean(0)) / df2[cols].std(0)
df2 = df2.drop("row.names", 1)

df2

# Check for NaN values
df2.isna().sum()

# Correlation matrix heat map
plt.imshow(abs(np.corrcoef(df2.values[:,:-1].T)), cmap="hot", vmax=1, vmin=0)
plt.colorbar(label='Degree of Correlation')
plt.yticks(np.arange(0,9), df.columns[1:])
plt.xticks(np.arange(0,9), df.columns[1:], rotation="vertical")
plt.show()

Y = df2.values[:, -1]
X = df2.values[:, :-1]
print(np.shape(X))

U, S, V = svd(X)

# Principal components
V

# Eigenvalues
S

P = X @ V.T

x = plt.scatter(P[Y == 1, 0], P[Y == 1, 1])
y = plt.scatter(P[Y == 0, 0], P[Y == 0, 1], c = 'orange')
plt.xlabel('PC1')
plt.ylabel('PC2')
plt.show()

pcs = [0,1,2]
legendStrs = ['PC'+str(e+1) for e in pcs]
c = ['r','g','b']
bw = .2
r = np.arange(1,9+1)
for i in pcs:    
    plt.bar(r+i*bw, V[i], width=bw)
plt.xticks(r+bw, df.columns[1:], rotation =  'vertical')
plt.xlabel('Attributes')
plt.ylabel('Component coefficients')
plt.legend(legendStrs)
plt.grid()
plt.title('South African Heart Disease: PCA Component Coefficients')
plt.show()


S2 = np.power(S,2)
ExplainedVariance = np.cumsum(S2)/np.sum(S2)
plt.plot(ExplainedVariance)
plt.plot(S2/np.sum(S2))
plt.ylim(0,1)
plt.xticks(np.arange(0,9),labels = np.arange(1,10))
plt.grid()
plt.ylabel('Explained Variance')
plt.xlabel('Principal Components')
plt.legend(['Cumultative amount of variance explained','Amount of variance explained by each'])
plt.title('Variance explained by principal components')